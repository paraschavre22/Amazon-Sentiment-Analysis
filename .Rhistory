library(tidyverse)
library(rvest)
library(robotstxt)
library(stringr)
library(xml2)
library(XML)
library(ggplot2)
library(ggraph)
library(dplyr)
library(robotstxt)
library(cld2)
library(wordcloud)
library(C50)
library(tidytext)
library(SnowballC)
library(wordcloud2)
library(udpipe)
library(igraph)
library(cooccur)
library(visNetwork)
library(textplot)
library(ggplot2)
amazon_reviews <- function(id, page) {
url <- paste0("https://www.amazon.co.uk/product-reviews/",
id, "/?pageNumber=", page)
html <- read_html(url)
# Review title (UK and not-UK)
title = html %>%
html_elements("[class='a-size-base a-link-normal review-title a-color-base review-title-content a-text-bold']") %>%
html_text2()
title = title %>%
c(html %>%
html_elements("[class='a-size-base review-title a-color-base review-title-content a-text-bold']") %>%
html_text2())
# Review text (the same for UK and not-UK)
text = html %>%
html_elements("[class='a-size-base review-text review-text-content']") %>%
html_text2()
# Review stars (UK and not-UK)
star = html %>%
html_elements("[data-hook='review-star-rating']") %>%
html_text2()
star = star %>%
c(html %>%
html_elements("[data-hook='cmps-review-star-rating']") %>%
html_text2())
# Return a tibble
tibble(title, text, star, page = page) %>%
return()
}
id = "B00I3LUYNG"
page = 1:50
data = map_df(page, ~amazon_reviews(id = "B00I3LUYNG", page = .))
data$doc_id = 1:nrow(data)
save(data, file = "data.rda")
load("data.rda")
data$title_lang = detect_language(data$title)
data$text_lang = detect_language(data$text)
table(Text = data$text_lang, Title = data$title_lang, useNA = "always")
data = data %>%
filter(text_lang == "en")
View(data)
data = data %>%
mutate(score = as.numeric(substring(star, 1, 1)))
summary(data$score)
data %>%
count(score) %>%
mutate(p = round(n/sum(n), 2))
data %>%
ggplot(aes(x = score)) + geom_bar(aes(y = (..count..)), fill = "steelblue") +
labs(title = "Amazon reviews' stars", subtitle = "The Theory That Would Not Die, by Mcgrayne",
x = "Stars", y = "Number of comments") + theme_bw() +
theme(plot.title = element_text(color = "steelblue", size = 12,
face = "bold"), plot.subtitle = element_text(color = "steelblue2"))
data = data %>%
mutate(star_sent = ifelse(score >= 4, "positive", "negative"))
data %>%
count(star_sent) %>%
mutate(p = n/sum(n))
data$nchar = str_length(data$text)
ggplot(data, aes(x = star_sent, y = nchar, fill = star_sent)) +
geom_boxplot() + theme_bw() + scale_fill_manual(values = c("steelblue",
"skyblue"))
install.packages("tidytext")
tidy_text <- data %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_stem <- tidy_text %>%
mutate(word = wordStem(word))
install.packages("udpipe")
tidy_lemma <- udpipe(data, "english-gum")
tidy_lemma = tidy_lemma %>%
mutate(stem = wordStem(token)) %>%
tibble()
tidy_lemma
tidy_lemma %>%
select(token, lemma, stem)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(error = TRUE)
tidy_text <- data %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_stem <- tidy_text %>%
mutate(word = wordStem(word))
tidy_lemma <- udpipe(data, "english-gum")
tidy_lemma <- udpipe(data, "english-gum")
tidy_lemma = tidy_lemma %>%
mutate(stem = wordStem(token)) %>%
tibble()
#additional Data Processing and Visualization
data %>%
bind_rows() %>%
unnest_tokens(output = "word", input = "text", token = "words") %>%
count(word) %>%
filter(!(word %in% c("headphone","headphones"))) %>%
anti_join(tidytext::stop_words, by = "word") -> word_tb
wordcloud::wordcloud(words = word_tb$word, freq = word_tb$n)
word.freq.table <- data %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
word.freq.table
word.freq.table %>%
filter(n>1) %>%
with(wordcloud(word, n,
scale = c(5,0.5),
colors = brewer.pal(8, "Dark2")))
tidy_stem %>%
count(word) %>%
slice_max(n, n = 10) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = word)) + geom_bar(stat = "identity",
fill = "skyblue") + xlab(NULL) + labs(title = "Most common stems in reviews",
y = "Stems count") + theme(legend.position = "none", plot.title = element_text(color = "steelblue",
size = 12, face = "bold")) + coord_flip() + theme_bw()
tidy_lemma = tidy_lemma %>%
mutate(stem = wordStem(token)) %>%
tibble()
tidy_lemma
tidy_lemma %>%
select(token, lemma, stem)
#additional Data Processing and Visualization
data %>%
bind_rows() %>%
unnest_tokens(output = "word", input = "text", token = "words") %>%
count(word) %>%
filter(!(word %in% c("headphone","headphones"))) %>%
anti_join(tidytext::stop_words, by = "word") -> word_tb
wordcloud::wordcloud(words = word_tb$word, freq = word_tb$n, scale = c(3, 0.2))
word.freq.table <- data %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
word.freq.table
word.freq.table %>%
filter(n>1) %>%
with(wordcloud(word, n,
scale = c(3,0.2),
colors = brewer.pal(8, "Dark2")))
